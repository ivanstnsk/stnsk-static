{"version":3,"sources":["screens/Contacts/laptop/Contacts.tsx","screens/Contacts/laptop/components/ContactButton/index.ts","screens/Contacts/laptop/components/SocialButton/index.ts","screens/Contacts/laptop/components/index.ts","screens/Contacts/laptop/index.ts","screens/Contacts/laptop/components/ContactButton/ContactButton.tsx","screens/Contacts/laptop/components/SocialButton/SocialButton.tsx","screens/Contacts/laptop/components/ContactButton/styles.ts","screens/Contacts/laptop/components/SocialButton/styles.ts","screens/Contacts/laptop/styles.ts"],"names":["Contacts","classes","useStyles","className","container","content","title","subTitle","innerContainer","innerContent","contentCol","type","text","socialContent","ContactButton","onClick","useState","active","setActive","iconColor","getActiveHandler","useCallback","nextActive","button","onMouseEnter","onMouseLeave","width","height","color","SocialButton","useMouseHover","containerRef","hovered","ref","icon","styles","colors","typography","backgroundColor","display","flexDirection","justifyContent","alignItems","border","outline","cursor","transition","marginBottom","transform","primary","greenMedium","fontSize","fontWeight","lineHeight","marginLeft","useTStyles","marginTop","props","bg","bgContent","greyUltralight","sizes","offsetHorizontal","position","flex","overflow","margin","paddingTop","offsetTop","paddingLeft","paddignRight","fontStyle","contentColRight"],"mappings":"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","file":"static/js/3.363efa0d.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ContentHeader, SectionTitle } from 'components';\n\nimport { ContactButton, SocialButton } from './components';\nimport { useStyles } from './styles';\n\n\nexport const Contacts: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.content}>\n        <ContentHeader\n          title=\"Contacts\"\n          subTitle=\"In case you want to get in touch with me\"\n        />\n        <div className={classes.innerContainer}>\n          <div className={classes.innerContent}>\n            <div className={classes.contentCol}>\n              <SectionTitle>Job offers</SectionTitle>\n              <ContactButton\n                type=\"mail\"\n                text=\"ivan.stnsk@gmail.com\"\n              />\n              <ContactButton\n                type=\"skype\"\n                text=\"ivan.stnsk\"\n              />\n            </div>\n            <div className={classes.contentCol}>\n              <SectionTitle>Social pages</SectionTitle>\n              <div className={classes.socialContent}>\n                <SocialButton\n                  type=\"linkedin\"\n                />\n                <SocialButton\n                  type=\"github\"\n                />\n                <SocialButton\n                  type=\"instagram\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export { ContactButton } from './ContactButton';\n","export { SocialButton } from './SocialButton';\n","export { ContactButton } from './ContactButton';\nexport { SocialButton } from './SocialButton';\n","export { Contacts as default } from './Contacts';\n","import React, { useState, useCallback } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { TContactButtonTypes } from './types';\nimport { useStyles } from './styles';\n\n\ninterface ContactButtonProps {\n  type: TContactButtonTypes;\n  text: string;\n  onClick?: () => void;\n}\n\nexport const ContactButton: React.FC<ContactButtonProps> = ({\n  type,\n  text,\n  onClick,\n}) => {\n  const [active, setActive] = useState(false);\n  const classes = useStyles();\n  const iconColor = active\n    ? '#81AF65'\n    : 'rgba(255,255,255,0.4)';\n\n  const getActiveHandler = useCallback((nextActive: boolean) => () => {\n    setActive(nextActive);\n  }, [setActive]);\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n      onMouseEnter={getActiveHandler(true)}\n      onMouseLeave={getActiveHandler(false)}\n    >\n      <SvgIcon\n        type={type}\n        width={60}\n        height={60}\n        color={iconColor}\n      />\n      <span className={classes.text}>\n        {text}\n      </span>\n    </button>\n  );\n};\n","import React from 'react';\n\nimport { SvgIcon, Button } from 'components';\nimport { useMouseHover } from 'hooks';\n\nimport { TContactButtonTypes } from './types';\nimport { useStyles } from './styles';\n\n\ninterface SocialButtonProps {\n  type: TContactButtonTypes;\n  onClick?: () => void;\n}\n\nexport const SocialButton: React.FC<SocialButtonProps> = ({\n  type,\n  onClick,\n}) => {\n  const [containerRef, hovered] = useMouseHover<HTMLDivElement>();\n  const classes = useStyles({ hovered });\n  const iconColor = hovered\n    ? '#81AF65'\n    : 'rgba(255,255,255,0.4)';\n\n  return (\n    <div\n      ref={containerRef}\n      className={classes.container}\n      onClick={onClick}\n    >\n      <SvgIcon\n        className={classes.icon}\n        type={type}\n        width={60}\n        height={60}\n        color={iconColor}\n      />\n      <Button\n        className={classes.button}\n        text=\"Open\"\n        width={110}\n        onClick={onClick}\n      />\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title },\n    primary: { greenMedium },\n  },\n}) => {\n  return {\n    button: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      border: 'none',\n      outline: 'none',\n      cursor: 'pointer',\n      transition: 'all 0.4s ease',\n      marginBottom: 40,\n\n      '&:hover': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n        transition: 'all 0.4s ease',\n      },\n      '&:hover $text': {\n        color: greenMedium,\n      },\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: title,\n      marginLeft: 30,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\ntype TStyleProps = {\n  hovered: boolean;\n};\n\nconst styles: AppStyles = () => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      transition: 'all 0.4s ease',\n    },\n    button: {\n      marginTop: 30,\n    },\n    icon: ({ hovered }: TStyleProps) => ({\n      transform: hovered\n        ? 'scaleX(1.1) scaleY(1.1)'\n        : 'scaleX(1) scaleY(1)',\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      bg, bgContent, greyUltralight, greenMedium,\n    },\n  },\n  sizes: {\n    content: { offsetHorizontal, offsetTop },\n  },\n}) => {\n  return {\n    container: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flex: 1,\n      backgroundColor: bg,\n      overflow: 'hidden',\n    },\n    content: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      backgroundColor: bgContent,\n      margin: 0,\n      paddingTop: offsetTop,\n      paddingLeft: offsetHorizontal,\n      paddignRight: offsetHorizontal,\n    },\n    title: {\n      color: greenMedium,\n      fontSize: 50,\n      fontWeight: 500,\n      marginBottom: 16,\n    },\n    text: {\n      color: greyUltralight,\n      fontSize: 18,\n      fontWeight: 300,\n      fontStyle: 'normal',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContent: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n\n      '& > *': {\n        marginLeft: 150,\n      },\n      '& *:first-child': {\n        marginLeft: 0,\n      },\n    },\n    contentCol: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n    },\n    contentColRight: {\n      marginLeft: 150,\n    },\n    socialContent: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      '& > *': {\n        marginLeft: 40,\n        marginBottom: 40,\n      },\n      '& *:first-child': {\n        marginLeft: 0,\n      },\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n"],"sourceRoot":""}